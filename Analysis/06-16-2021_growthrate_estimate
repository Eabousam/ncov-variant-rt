## Purpose of the analysis is to estimate the Rt and growth rate of the GSAID COVID-19 data 

# Installing Packages


```{r}

library(installr)
library(tidyverse)
library(lubridate)
library(data.table)
library(EpiNow2)
library(dplyr)
library(scales)
library(devtools)

```


# Reading Dataset and tidying

```{r}
covmeta_raw = read.csv("metadata-usa.csv")
View(covmeta_raw)
covtry= data.frame(covmeta_raw$date, covmeta_raw$division, covmeta_raw$pango_lineage)
covtry
```



# B.1.1.7 Lineage Growth Rate Estimate in States


```{r}

covtry

dfs1 = covtry %>% filter(covmeta_raw.division == "California")

dfs1

#Estimating frequency of B.1.1.7 Lineage in California and transforming to 


new_dfs1 = dfs1 %>%
  drop_na() %>% # if we want "ignore" NAs when counting
  group_by(covmeta_raw.date) %>% summarise(freq = sum(covmeta_raw.pango_lineage=="B.1.1.7")/cumsum(n())+0.0001)




new_dfs1
date1 = time(new_dfs1$covmeta_raw.date)
date1

# Transform to logit space using qlogis function
new_dfs1 = new_dfs1%>% mutate(logit = qlogis(new_dfs1$freq))
new_dfs1
Growth_rate1= new_dfs1 %>% select(covmeta_raw.date,logit)

Growth_rate1
#Fitting the logit model and the predicted values for B.1.1.7 Lineage 
#California State
#fitx1= lm(Growth_rate1$logit~date)
#fitx1
#plot(fitx1)

#Plotting the growth rate of California B.1.1.7 lineage
plot(date1, Growth_rate1$logit, ylab = "Lineage Frequency", xlab = "Observed data")




ggplot(Growth_rate1, aes(date1,logit)) + geom_point() + ggtitle("B.1.1.7 Growth Rate in California State") + ylab("Lineage Frequency") + xlab("Observed date") + geom_smooth() 

  

#the inverse logit backtransform
#predictedv1 = predict(fitx1)
#Growth_rate1x = Growth_rate1 %>% mutate(logitfit= plogis(predictedv1))

#plot(date1, Growth_rate1x$logitfit)
#ggplot(Growth_rate1x, aes(date1,logitfit)) + geom_line()
#abline(fitx1)





covtry

dfs2 = covtry %>% filter(covmeta_raw.division == "Florida")
dfs2

#Estimating frequency of B.1.1.7 Lineage in California and transforming to
new_dfs2 = dfs2 %>%
  drop_na() %>% # if we want "ignore" NAs when counting
  group_by(covmeta_raw.date) %>% summarise(freq = sum(covmeta_raw.pango_lineage=="B.1.1.7")/cumsum(n())+0.0001)


new_dfs2
date2 = time(new_dfs2$covmeta_raw.date)
date2

# Transform to logit space using qlogis function
new_dfs2 = new_dfs2%>% mutate(logit = qlogis(new_dfs2$freq))
new_dfs2
#Fitting the logit model and the predicted values for B.1.1.7 Lineage 
#California State
Growth_rate2= new_dfs2 %>% select(covmeta_raw.date,logit)
Growth_rate2
#Fit
fitx2= lm(Growth_rate2$logit~date2)
fitx2
plot(fitx2)

#Plotting the growth rate of California B.1.1.7 lineage
ggplot(Growth_rate2, aes(date2,logit)) + geom_point() + ggtitle("B.1.1.7 Growth Rate in Florida State") + ylab("Lineage Frequency") + xlab("Observed date") + geom_smooth()
  
#geom_abline(intercept = -4.4688, slope = 0.03)



#the inverse logit backtransform
predictedv2 = predict(fitx2)
Growth_rate3 =Growth_rate2 %>% mutate(logitfit = plogis(predictedv2))

plot(date2, Growth_rate3$logitfit)
ggplot(Growth_rate3, aes(date,logitfit)) + geom_line()
abline(fitx2)
